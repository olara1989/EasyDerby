/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package easyderby.view;

import easyderby.Conexion;
import easyderby.Funciones;
import java.awt.Desktop;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.export.JRPdfExporter;

/**
 *
 * @author Omar
 */
public class Torneo extends javax.swing.JDialog {

    Funciones f;
    boolean guardarT = true;
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    int idTorneo = 0;
    ArrayList<String[]> partidosParticipantes = null;
    ArrayList<String[]> partidosGallos = null;
    ArrayList<String[]> gallosPesados = new ArrayList<String[]>();
    int gallosTorneo;
    ArrayList<String> lstRest = new ArrayList<String>();
    int pesoMin = 0;
    int pesoMax = 0;
    int tolerancia = 0;

    /**
     * Creates new form Torneo
     */
    Frame parent;

    public Torneo(java.awt.Frame parent, boolean modal, boolean modificar) {
        super(parent, modal);
        this.parent = parent;
        initComponents();
        lblLoad.setIcon(null);
        f = new Funciones();
        txtNombre.requestFocus();
        Date hoy = new Date();
        txtFecha.setDate(hoy);
        txtGallos.setValue(new Integer(2));
        txtTolerancia.setValue(new Integer(80));
        txtVictoria.setValue(new Integer(3));
        txtEmpate.setValue(new Integer(1));
        txtDerrota.setValue(new Integer(0));
        //Panel Jugadores
        f.actualizarTabla(tblPartidos, f.getPartidos());
        guardarT = !modificar;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtFecha = new com.toedter.calendar.JDateChooser();
        txtUbicacion = new javax.swing.JTextField();
        txtOrganización = new javax.swing.JTextField();
        txtCompañia = new javax.swing.JTextField();
        txtGallos = new javax.swing.JSpinner();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtTolerancia = new javax.swing.JSpinner();
        txtMinimo = new javax.swing.JSpinner();
        txtMaximo = new javax.swing.JSpinner();
        jPanel8 = new javax.swing.JPanel();
        txtDerrota = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtVictoria = new javax.swing.JSpinner();
        txtEmpate = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblPartidos = new javax.swing.JTable();
        jButton21 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jButton20 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblGallos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        lstRestricciones = new javax.swing.JList<>();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblPartidosRestricciones = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        buttonPopup1 = new org.edisoncor.gui.button.ButtonPopup();
        buttonPopup2 = new org.edisoncor.gui.button.ButtonPopup();
        jLabel14 = new javax.swing.JLabel();
        btnPeleasComplete = new org.edisoncor.gui.button.ButtonPopup();
        btnCotejo = new org.edisoncor.gui.button.ButtonPopup();
        btnPeleas = new org.edisoncor.gui.button.ButtonPopup();
        txtID = new javax.swing.JTextField();
        lblLoad = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblPeleas = new javax.swing.JTable();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Torneo");
        setResizable(false);

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jPanel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Nombre:");
        jLabel1.setPreferredSize(new java.awt.Dimension(100, 15));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Fecha:");
        jLabel2.setPreferredSize(new java.awt.Dimension(100, 15));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Ubicación:");
        jLabel3.setPreferredSize(new java.awt.Dimension(100, 15));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Organización");
        jLabel4.setPreferredSize(new java.awt.Dimension(100, 15));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Compañia:");
        jLabel5.setPreferredSize(new java.awt.Dimension(100, 15));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Gallos por partido:");
        jLabel6.setPreferredSize(new java.awt.Dimension(100, 15));

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtFecha.setDateFormatString("yyyy-MM-d");
        txtFecha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtUbicacion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtOrganización.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtCompañia.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtGallos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gramos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Tolerancia:");
        jLabel7.setPreferredSize(new java.awt.Dimension(100, 15));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Peso minimo:");
        jLabel8.setPreferredSize(new java.awt.Dimension(100, 15));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Peso maximo:");
        jLabel9.setPreferredSize(new java.awt.Dimension(100, 15));

        txtTolerancia.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtTolerancia.setOpaque(false);

        txtMinimo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtMaximo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTolerancia, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(132, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTolerancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Puntaje"));

        txtDerrota.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Victoria:");
        jLabel10.setPreferredSize(new java.awt.Dimension(100, 15));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Empate:");
        jLabel11.setPreferredSize(new java.awt.Dimension(100, 15));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Derrota:");
        jLabel12.setPreferredSize(new java.awt.Dimension(100, 15));

        txtVictoria.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtEmpate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtVictoria, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtEmpate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDerrota, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(312, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtVictoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmpate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDerrota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/circled_right_2-30.png"))); // NOI18N
        jButton1.setText("Continuar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/cancel-30.png"))); // NOI18N
        jButton2.setText(" Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCompañia)
                            .addComponent(txtUbicacion)
                            .addComponent(txtNombre)
                            .addComponent(txtOrganización)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtGallos, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(380, 380, 380)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOrganización, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCompañia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGallos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Torneo", jPanel1);

        jPanel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jButton14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/circled_right_2-30.png"))); // NOI18N
        jButton14.setText("Continuar");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/cancel-30.png"))); // NOI18N
        jButton15.setText(" Cancelar");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        tblPartidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Partido", "Lugar", "Juega"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPartidos.getTableHeader().setReorderingAllowed(false);
        tblPartidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPartidosMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblPartidos);
        if (tblPartidos.getColumnModel().getColumnCount() > 0) {
            tblPartidos.getColumnModel().getColumn(0).setResizable(false);
            tblPartidos.getColumnModel().getColumn(0).setPreferredWidth(5);
            tblPartidos.getColumnModel().getColumn(1).setResizable(false);
            tblPartidos.getColumnModel().getColumn(2).setResizable(false);
            tblPartidos.getColumnModel().getColumn(3).setResizable(false);
        }

        jButton21.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/plu-30.png"))); // NOI18N
        jButton21.setText("Agregar");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 983, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton14)
                .addGap(18, 18, 18)
                .addComponent(jButton21)
                .addGap(18, 18, 18)
                .addComponent(jButton15)
                .addGap(320, 320, 320))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton14)
                    .addComponent(jButton15)
                    .addComponent(jButton21))
                .addGap(39, 39, 39))
        );

        jTabbedPane1.addTab("Jugadores", jPanel4);

        jPanel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Peso", "Total"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        btnAgregar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/add_user_male-30.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        btnAgregar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAgregarKeyPressed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/edit_user_male-30.png"))); // NOI18N
        jButton4.setText("Modificar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Etiquetas");

        jButton20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/remove_user_male-30.png"))); // NOI18N
        jButton20.setText("Eliminar");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(btnAgregar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
        );

        jButton12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/cancel-30.png"))); // NOI18N
        jButton12.setText(" Cancelar");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/circled_right_2-30.png"))); // NOI18N
        jButton13.setText("Continuar");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jScrollPane6.setViewportView(tblGallos);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(407, 407, 407)
                        .addComponent(jButton13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6)
                        .addGap(18, 18, 18)))
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton13)
                            .addComponent(jButton12))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Partidos", jPanel3);

        jPanel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Restricciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        lstRestricciones.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane5.setViewportView(lstRestricciones);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Partidos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        tblPartidosRestricciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Partido", "Agegar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblPartidosRestricciones);
        if (tblPartidosRestricciones.getColumnModel().getColumnCount() > 0) {
            tblPartidosRestricciones.getColumnModel().getColumn(0).setResizable(false);
            tblPartidosRestricciones.getColumnModel().getColumn(0).setPreferredWidth(1);
            tblPartidosRestricciones.getColumnModel().getColumn(1).setResizable(false);
            tblPartidosRestricciones.getColumnModel().getColumn(1).setPreferredWidth(2);
            tblPartidosRestricciones.getColumnModel().getColumn(2).setResizable(false);
            tblPartidosRestricciones.getColumnModel().getColumn(2).setPreferredWidth(1);
        }

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/checkmark-30.png"))); // NOI18N
        jButton7.setText("Agregar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/cancel-30.png"))); // NOI18N
        jButton8.setText("Quitar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/circled_right_2-30.png"))); // NOI18N
        jButton16.setText("Continuar");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/cancel-30.png"))); // NOI18N
        jButton17.setText(" Cancelar");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton17))
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 264, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton16)
                            .addComponent(jButton17))
                        .addGap(46, 46, 46))))
        );

        jTabbedPane1.addTab("Restricciones", jPanel2);

        jPanel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        buttonPopup1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/checklist-30.png"))); // NOI18N
        buttonPopup1.setText("Cotejar");
        buttonPopup1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPopup1ActionPerformed(evt);
            }
        });

        buttonPopup2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/edit_resume_template-30.png"))); // NOI18N
        buttonPopup2.setText("Pactar");
        buttonPopup2.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Formatos a imprimir");

        btnPeleasComplete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/pdf_2-30.png"))); // NOI18N
        btnPeleasComplete.setText("Peleas completo");
        btnPeleasComplete.setEnabled(false);
        btnPeleasComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPeleasCompleteActionPerformed(evt);
            }
        });

        btnCotejo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/pdf_2-30.png"))); // NOI18N
        btnCotejo.setText("Puntaje");
        btnCotejo.setEnabled(false);
        btnCotejo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCotejoActionPerformed(evt);
            }
        });

        btnPeleas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/pdf_2-30.png"))); // NOI18N
        btnPeleas.setText("Peleas");
        btnPeleas.setEnabled(false);
        btnPeleas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPeleasActionPerformed(evt);
            }
        });

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        lblLoad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/loading (1).gif"))); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnPeleasComplete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel10Layout.createSequentialGroup()
                            .addComponent(buttonPopup1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(buttonPopup2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel10Layout.createSequentialGroup()
                            .addComponent(btnPeleas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnCotejo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(31, 31, 31))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonPopup1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonPopup2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPeleas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCotejo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPeleasComplete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblPeleas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "# Pelea", "Rojo - Partido", "Rojo - Anillo", "Verde - Partido", "Verde - Partido", "Ronda"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(tblPeleas);
        if (tblPeleas.getColumnModel().getColumnCount() > 0) {
            tblPeleas.getColumnModel().getColumn(0).setMaxWidth(50);
            tblPeleas.getColumnModel().getColumn(5).setMaxWidth(50);
        }

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 706, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/circled_right_2-30.png"))); // NOI18N
        jButton18.setText("Continuar");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/cancel-30.png"))); // NOI18N
        jButton19.setText(" Cancelar");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(jButton18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton19)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton18)
                            .addComponent(jButton19))
                        .addGap(0, 33, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cotejos", jPanel5);

        jPanel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jToolBar1.setRollover(true);

        jButton9.setText("jButton9");
        jButton9.setFocusable(false);
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton9);

        jButton10.setText("jButton10");
        jButton10.setFocusable(false);
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton10);

        jButton11.setText("jButton11");
        jButton11.setFocusable(false);
        jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton11);

        jRadioButton4.setText("jRadioButton4");
        jRadioButton4.setFocusable(false);
        jRadioButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jRadioButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jRadioButton4);

        jRadioButton5.setText("jRadioButton5");
        jRadioButton5.setFocusable(false);
        jRadioButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jRadioButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jRadioButton5);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 983, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Reportes", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nom = txtNombre.getText();
        String fecha = sdf.format(txtFecha.getDate());
        String ubicacion = txtUbicacion.getText();
        String organizacion = txtOrganización.getText();
        String compania = txtCompañia.getText();
        String gallos = txtGallos.getValue().toString();
        String tolerancia = txtTolerancia.getValue().toString();
        String peso_min = txtMinimo.getValue().toString();
        String peso_max = txtMaximo.getValue().toString();
        String victoria = txtVictoria.getValue().toString();
        String empate = txtEmpate.getValue().toString();
        String derrota = txtDerrota.getValue().toString();
        gallosTorneo = Integer.parseInt(gallos);
        pesoMax = Integer.parseInt(peso_max);
        pesoMin = Integer.parseInt(peso_min);
        this.tolerancia = Integer.parseInt(tolerancia);
        if (guardarT) {

            if (nom.equals("")) {
                JOptionPane.showMessageDialog(null, "Debes de colocar un nombre", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else if (f.agregarTorneo(nom, fecha, ubicacion, organizacion, compania, Integer.parseInt(gallos), Integer.parseInt(tolerancia), Integer.parseInt(peso_min),
                    Integer.parseInt(peso_max), Integer.parseInt(victoria), Integer.parseInt(empate), Integer.parseInt(derrota))) {
                JOptionPane.showMessageDialog(null, "Torneo almacenado");
                jTabbedPane1.setEnabledAt(1, true);
                idTorneo = f.getUltimoTorneo();
                btnAgregar.requestFocus();
                System.out.println("Gallos: " + gallosTorneo);
            } else {
                JOptionPane.showMessageDialog(null, "Error al registrar el torneo", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            if (nom.equals("")) {
                JOptionPane.showMessageDialog(null, "Debes de colocar un nombre", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else if (f.modificarTorneo(idTorneo, nom, fecha, ubicacion, organizacion, Integer.parseInt(gallos), Integer.parseInt(tolerancia), Integer.parseInt(peso_min),
                    Integer.parseInt(peso_max), Integer.parseInt(victoria), Integer.parseInt(empate), Integer.parseInt(derrota))) {
                JOptionPane.showMessageDialog(null, "Torneo actualizado");
                jTabbedPane1.setEnabledAt(1, true);
                btnAgregar.requestFocus();
            } else {
                JOptionPane.showMessageDialog(null, "Error al registrar el torneo", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setVisible(false);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void tblPartidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPartidosMouseClicked

    }//GEN-LAST:event_tblPartidosMouseClicked

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        AgregarGallo ag = new AgregarGallo(this.parent, true, gallosTorneo, tblGallos.getRowCount() + 1, partidosGallos, pesoMin, pesoMax, tolerancia);
        ag.setLocationRelativeTo(this);
        ag.setVisible(true);
        String[] infoGallos = ag.itemInfo;

        if (infoGallos != null) {
            // agregar los gallos a la tabla
            gallosPesados.add(infoGallos);

            f.actualizarTabla(tblGallos, gallosPesados);

            int index = -1;
            for (int i = 0; i < partidosGallos.size(); i++) {

                if (partidosGallos.get(i)[0].equals(infoGallos[0].split("\\.")[0])) {
                    index = i;
                    break;
                }
            }
            partidosGallos.remove(index);

        }

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnAgregarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAgregarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            setVisible(false);
        }

    }//GEN-LAST:event_btnAgregarKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int idP = Integer.parseInt(tblGallos.getValueAt(tblGallos.getSelectedRow(), 0).toString().split("\\.")[0]);
        String nomP = tblGallos.getValueAt(tblGallos.getSelectedRow(), 0).toString().split("\\.")[1];
        String[] datos = new String[tblGallos.getColumnCount()];
        datos[0] = "" + idP;
        for (int i = 1; i < datos.length; i++) {
            datos[i] = tblGallos.getValueAt(tblGallos.getSelectedRow(), i).toString();
        }
        partidosGallos.add(new String[]{idP + "", nomP});
        // Mostrar la ventana para modificar el gallo
        AgregarGallo ag = new AgregarGallo(this.parent, true, gallosTorneo, tblGallos.getRowCount() + 1, partidosGallos, pesoMin, pesoMax, tolerancia, datos);
        ag.setLocationRelativeTo(this);
        ag.setVisible(true);
        String[] infoGallos = ag.itemInfo;
        gallosPesados.remove(tblGallos.getSelectedRow());
        if (infoGallos != null) {
            // agregar los gallos a la tabla
            gallosPesados.add(infoGallos);

            f.actualizarTabla(tblGallos, gallosPesados);

            int index = -1;
            for (int i = 0; i < partidosGallos.size(); i++) {

                if (partidosGallos.get(i)[0].equals(infoGallos[0].split("\\.")[0])) {
                    index = i;
                    break;
                }
            }
            partidosGallos.remove(index);

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed

        for (int i = 0; i < (tblGallos.getRowCount()); i++) {
            int idPartido = Integer.parseInt(tblGallos.getValueAt(i, 0).toString().split("\\.")[0]);
            for (int j = 1; j <= gallosTorneo * 2; j += 2) {
                f.agregarGallo(Integer.parseInt(tblGallos.getValueAt(i, j + 1).toString()), Integer.parseInt(tblGallos.getValueAt(i, j).toString()), idPartido, idTorneo);

            }
        }
        JOptionPane.showMessageDialog(null, "Gallos agregados con exito!!!");
        jTabbedPane1.setSelectedIndex(3);
     }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        int tope = tblPartidos.getRowCount();
        partidosParticipantes = new ArrayList<String[]>();
        partidosGallos = new ArrayList<String[]>();
        int total = 0;
        for (int i = 0; i < tope; i++) {
            if (tblPartidos.getValueAt(i, 3) != null) {
                partidosParticipantes.add(new String[]{tblPartidos.getValueAt(i, 0).toString(), tblPartidos.getValueAt(i, 1).toString()});
                partidosGallos.add(new String[]{tblPartidos.getValueAt(i, 0).toString(), tblPartidos.getValueAt(i, 1).toString()});
                //
                total++;
            }
        }
        if ((gallosTorneo * total) % 2 == 0) {
            for (int i = 0; i < partidosParticipantes.size(); i++) {
                f.agregarPartidos_torneo(Integer.parseInt(partidosParticipantes.get(i)[0]), idTorneo, 0);
            }
            cargarArbol();
            String[] cols = new String[(gallosTorneo * 2) + 1];
            cols[0] = "Partido";
            int num = 0;
            for (int i = 1; i < cols.length; i++) {
                if (i % 2 != 0) {
                    num++;
                    cols[i] = "Gallo " + (num);
                } else {
                    cols[i] = "Anillo " + (num);
                }
            }
            tblGallos.setModel(new javax.swing.table.DefaultTableModel(new Object[][]{}, cols));
            JOptionPane.showMessageDialog(null, "Partidos agregadado");
            jTabbedPane1.setSelectedIndex(2);
        } else {
            JOptionPane.showMessageDialog(null, "El total de gallos da NoN", "ERROR!!!", 0);
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        // Revisar que se haya seleccionado un partido
        int c = 0;
        String neww = "";
        for (int i = 0; i < tblPartidosRestricciones.getRowCount(); i++) {
            if (tblPartidosRestricciones.getValueAt(i, 2) != null && Boolean.parseBoolean(tblPartidosRestricciones.getValueAt(i, 2).toString())) {

                neww += tblPartidosRestricciones.getValueAt(i, 0).toString() + ". " + tblPartidosRestricciones.getValueAt(i, 1).toString() + ".";
                c++;
                tblPartidosRestricciones.setValueAt(false, i, 2);
            }
        }
        if (c < 2) {
            JOptionPane.showMessageDialog(null, "Debes de seleccionar por lo menos dos partidos", "ERROR!!!", 0);
        } else {
            lstRest.add(neww);
            DefaultListModel listModel = new DefaultListModel();

            for (int i = 0; i < lstRest.size(); i++) {
                listModel.addElement(lstRest.get(i));
            }
            lstRestricciones.setModel(listModel);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        int index = lstRestricciones.getSelectedIndex();
        if (index == -1) {
            JOptionPane.showMessageDialog(null, "Debes de seleccionar por lo menos una restricción", "ERROR!!!", 0);
        } else {
            lstRest.remove(index);
            DefaultListModel listModel = new DefaultListModel();
            for (int i = 0; i < lstRest.size(); i++) {
                listModel.addElement(lstRest.get(i));
            }
            lstRestricciones.setModel(listModel);
        }

    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        int opc = javax.swing.JOptionPane.showConfirmDialog(null, "¿Deseas eliminar el registro?");

        if (opc == JOptionPane.OK_OPTION) {
            if (tblGallos.getSelectedRow() >= 0) {
                String val = tblGallos.getValueAt(tblGallos.getSelectedRow(), 0).toString();
                gallosPesados.remove(tblGallos.getSelectedRow());
                f.actualizarTabla(tblGallos, gallosPesados);
                String[] nuevo = val.split("\\.");
                partidosGallos.add(new String[]{nuevo[0].replace(" ", ""), nuevo[1].replace(" ", "")});
                JOptionPane.showMessageDialog(null, "Registro eliminado");
            } else {
                JOptionPane.showMessageDialog(null, "Debes elegir un partido en la tabla", "ERROR!!!", 0);
            }
        }

    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed

        Partido partido = new Partido(parent, true);
        partido.setLocationRelativeTo(this);
        partido.setVisible(true);
        f.actualizarTabla(tblPartidos, f.getPartidos());

        f.actualizarTabla(jTable1, gallosPesados);

    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed

        int totRes = lstRestricciones.getModel().getSize();

        for (int i = 0; i < totRes; i++) {
            String res = (String) lstRestricciones.getModel().getElementAt(i);
            String arrRes[] = res.split("\\.");
            System.out.println(res);
            String p1 = arrRes[0];
            for (int j = 2; j < arrRes.length; j += 2) {
                f.agregarRestriccion(idTorneo, Integer.parseInt(p1), Integer.parseInt(arrRes[j]));
            }
        }
        JOptionPane.showMessageDialog(null, "Restricciones agregadas con exito");
        jTabbedPane1.setSelectedIndex(4);
    }//GEN-LAST:event_jButton16ActionPerformed

    private void buttonPopup1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPopup1ActionPerformed
        lblLoad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easyderby/img/loading (1).gif"))); // 

        //Prueba de sorteo
        idTorneo = Integer.parseInt(txtID.getText());
        partidosParticipantes = f.getPartidosXTorneo(idTorneo);
        String[] datosTorneo = f.getTorneoDetalle(idTorneo);
        System.out.println("Tol: " + datosTorneo[7]);
        tolerancia = Integer.parseInt(datosTorneo[7]);
        System.out.println("Gall: " + datosTorneo[6]);
        gallosTorneo = Integer.parseInt(datosTorneo[6]);
        //Fin prueba
        ArrayList<String[]> gallosEnTorneo = f.gallosPorTorneo(idTorneo);
        ArrayList<String[]> restriccionesEntorneo = f.restriccionesPorTorneo(idTorneo);
        int tope = gallosEnTorneo.size();
        ArrayList<Integer> rojos = new ArrayList<Integer>();
        ArrayList<Integer> verdes = new ArrayList<Integer>();
        ArrayList<String> obs = new ArrayList<String>();
        for (int i = 0; i < tope; i++) {
            int rojo = Integer.parseInt(gallosEnTorneo.get(i)[0]);
            int pesoRojo = Integer.parseInt(gallosEnTorneo.get(i)[2]);
            int partidoRojo = Integer.parseInt(gallosEnTorneo.get(i)[5]);
            if (tope / 2 == rojos.size()) {
                break;
            } else {
                for (int j = i; j < tope; j++) {
                    int verde = Integer.parseInt(gallosEnTorneo.get(j)[0]);
                    int pesoVerde = Integer.parseInt(gallosEnTorneo.get(j)[2]);
                    int partidoVerde = Integer.parseInt(gallosEnTorneo.get(j)[5]);
                    if ((partidoRojo != partidoVerde) && (rojo != verde) && ((Math.abs(pesoRojo - pesoVerde) <= 0) && !estaEnPeleas(rojos, verdes, rojo) && !estaEnPeleas(rojos, verdes, verde) && !yaPelearon(partidoRojo, partidoVerde, rojos, verdes))) {
                        rojos.add(rojo);
                        verdes.add(verde);
                        obs.add("");
                        System.out.println(rojo + " vs " + verde + " | ");
                    }
                }
            }
        }
        for (int i = 0; i < tope; i++) {
            int rojo = Integer.parseInt(gallosEnTorneo.get(i)[0]);
            int pesoRojo = Integer.parseInt(gallosEnTorneo.get(i)[2]);
            int partidoRojo = Integer.parseInt(gallosEnTorneo.get(i)[5]);
            if (tope / 2 == rojos.size()) {
                break;
            } else {
                for (int j = i; j < tope; j++) {
                    int verde = Integer.parseInt(gallosEnTorneo.get(j)[0]);
                    int pesoVerde = Integer.parseInt(gallosEnTorneo.get(j)[2]);
                    int partidoVerde = Integer.parseInt(gallosEnTorneo.get(j)[5]);
                    if ((partidoRojo != partidoVerde) && (rojo != verde) && ((Math.abs(pesoRojo - pesoVerde) <= tolerancia / 2) && !estaEnPeleas(rojos, verdes, rojo) && !estaEnPeleas(rojos, verdes, verde) && !yaPelearon(partidoRojo, partidoVerde, rojos, verdes))) {
                        rojos.add(rojo);
                        verdes.add(verde);
                        obs.add("");
                        System.out.println(rojo + " vs " + verde);
                    }
                }
            }
        }

        for (int i = 0; i < tope; i++) {
            int rojo = Integer.parseInt(gallosEnTorneo.get(i)[0]);
            int pesoRojo = Integer.parseInt(gallosEnTorneo.get(i)[2]);
            int partidoRojo = Integer.parseInt(gallosEnTorneo.get(i)[5]);
            if (tope / 2 == rojos.size()) {
                break;
            } else {
                for (int j = i; j < tope; j++) {
                    int verde = Integer.parseInt(gallosEnTorneo.get(j)[0]);
                    int pesoVerde = Integer.parseInt(gallosEnTorneo.get(j)[2]);
                    int partidoVerde = Integer.parseInt(gallosEnTorneo.get(j)[5]);
                    if ((partidoRojo != partidoVerde) && (rojo != verde) && ((Math.abs(pesoRojo - pesoVerde) <= tolerancia) && !estaEnPeleas(rojos, verdes, rojo) && !estaEnPeleas(rojos, verdes, verde) && !yaPelearon(partidoRojo, partidoVerde, rojos, verdes))) {
                        rojos.add(rojo);
                        verdes.add(verde);

                        obs.add("");
                        System.out.println(rojo + " vs " + verde);
                    }
                }
            }
        }
        for (int i = 0; i < tope; i++) {
            int rojo = Integer.parseInt(gallosEnTorneo.get(i)[0]);
            int pesoRojo = Integer.parseInt(gallosEnTorneo.get(i)[2]);
            int partidoRojo = Integer.parseInt(gallosEnTorneo.get(i)[5]);
            if (tope / 2 == rojos.size()) {
                break;
            } else {
                for (int j = i; j < tope; j++) {
                    int verde = Integer.parseInt(gallosEnTorneo.get(j)[0]);
                    int pesoVerde = Integer.parseInt(gallosEnTorneo.get(j)[2]);
                    int partidoVerde = Integer.parseInt(gallosEnTorneo.get(j)[5]);
                    if ((partidoRojo != partidoVerde) && (rojo != verde) && ((Math.abs(pesoRojo - pesoVerde) <= (tolerancia * 1.5)) && !estaEnPeleas(rojos, verdes, rojo) && !estaEnPeleas(rojos, verdes, verde) && !yaPelearon(partidoRojo, partidoVerde, rojos, verdes))) {
                        rojos.add(rojo);
                        verdes.add(verde);
                        String observación = "La diferencia es " + ((Math.abs(pesoRojo - pesoVerde)));
                        obs.add(observación);
                        System.out.println(rojo + " vs " + verde);
                    }
                }
            }
        }
        for (int i = 0; i < tope; i++) {
            int rojo = Integer.parseInt(gallosEnTorneo.get(i)[0]);
            int pesoRojo = Integer.parseInt(gallosEnTorneo.get(i)[2]);
            int partidoRojo = Integer.parseInt(gallosEnTorneo.get(i)[5]);
            if (tope / 2 == rojos.size()) {
                break;
            } else {
                for (int j = i; j < tope; j++) {
                    int verde = Integer.parseInt(gallosEnTorneo.get(j)[0]);
                    int pesoVerde = Integer.parseInt(gallosEnTorneo.get(j)[2]);
                    int partidoVerde = Integer.parseInt(gallosEnTorneo.get(j)[5]);
                    if ((partidoRojo != partidoVerde) && (rojo != verde) && ((Math.abs(pesoRojo - pesoVerde) <= (tolerancia * 2)) && !estaEnPeleas(rojos, verdes, rojo) && !estaEnPeleas(rojos, verdes, verde) && !yaPelearon(partidoRojo, partidoVerde, rojos, verdes))) {
                        rojos.add(rojo);
                        verdes.add(verde);
                        String observación = "La diferencia es " + ((Math.abs(pesoRojo - pesoVerde)));
                        obs.add(observación);
                        System.out.println(rojo + " vs " + verde);
                    }
                }
            }
        }
        for (int i = 0; i < tope; i++) {
            int rojo = Integer.parseInt(gallosEnTorneo.get(i)[0]);
            int pesoRojo = Integer.parseInt(gallosEnTorneo.get(i)[2]);
            int partidoRojo = Integer.parseInt(gallosEnTorneo.get(i)[5]);
            if (tope / 2 == rojos.size()) {
                break;
            } else {
                for (int j = i; j < tope; j++) {
                    int verde = Integer.parseInt(gallosEnTorneo.get(j)[0]);
                    int pesoVerde = Integer.parseInt(gallosEnTorneo.get(j)[2]);
                    int partidoVerde = Integer.parseInt(gallosEnTorneo.get(j)[5]);
                    if ((partidoRojo != partidoVerde) && (rojo != verde) && ((Math.abs(pesoRojo - pesoVerde) <= (tolerancia * 2.5)) && !estaEnPeleas(rojos, verdes, rojo) && !estaEnPeleas(rojos, verdes, verde) && !yaPelearon(partidoRojo, partidoVerde, rojos, verdes))) {
                        rojos.add(rojo);
                        verdes.add(verde);
                        String observación = "La diferencia es " + ((Math.abs(pesoRojo - pesoVerde)));
                        obs.add(observación);
                        System.out.println(rojo + " vs " + verde);
                    }
                }
            }
        }
        for (int i = 0; i < tope; i++) {
            int rojo = Integer.parseInt(gallosEnTorneo.get(i)[0]);
            int pesoRojo = Integer.parseInt(gallosEnTorneo.get(i)[2]);
            int partidoRojo = Integer.parseInt(gallosEnTorneo.get(i)[5]);
            if (tope / 2 == rojos.size()) {
                break;
            } else {
                for (int j = i; j < tope; j++) {
                    int verde = Integer.parseInt(gallosEnTorneo.get(j)[0]);
                    int pesoVerde = Integer.parseInt(gallosEnTorneo.get(j)[2]);
                    int partidoVerde = Integer.parseInt(gallosEnTorneo.get(j)[5]);
                    if ((partidoRojo != partidoVerde) && (rojo != verde) && ((Math.abs(pesoRojo - pesoVerde) <= (tolerancia * 3)) && !estaEnPeleas(rojos, verdes, rojo) && !estaEnPeleas(rojos, verdes, verde) && !yaPelearon(partidoRojo, partidoVerde, rojos, verdes))) {
                        rojos.add(rojo);
                        verdes.add(verde);
                        String observación = "La diferencia es " + ((Math.abs(pesoRojo - pesoVerde)));
                        obs.add(observación);
                        System.out.println(rojo + " vs " + verde);
                    }
                }
            }
        }
        for (int i = 0; i < tope; i++) {
            int rojo = Integer.parseInt(gallosEnTorneo.get(i)[0]);
            int pesoRojo = Integer.parseInt(gallosEnTorneo.get(i)[2]);
            int partidoRojo = Integer.parseInt(gallosEnTorneo.get(i)[5]);
            if (tope / 2 == rojos.size()) {
                break;
            } else {
                for (int j = i; j < tope; j++) {
                    int verde = Integer.parseInt(gallosEnTorneo.get(j)[0]);
                    int pesoVerde = Integer.parseInt(gallosEnTorneo.get(j)[2]);
                    int partidoVerde = Integer.parseInt(gallosEnTorneo.get(j)[5]);
                    if ((partidoRojo != partidoVerde) && (rojo != verde) && ((Math.abs(pesoRojo - pesoVerde) <= (tolerancia * 3.5)) && !estaEnPeleas(rojos, verdes, rojo) && !estaEnPeleas(rojos, verdes, verde) && !yaPelearon(partidoRojo, partidoVerde, rojos, verdes))) {
                        rojos.add(rojo);
                        verdes.add(verde);
                        String observación = "La diferencia es " + ((Math.abs(pesoRojo - pesoVerde)));
                        obs.add(observación);
                        System.out.println(rojo + " vs " + verde);
                    }
                }
            }
        }
        for (int i = 0; i < tope; i++) {
            int rojo = Integer.parseInt(gallosEnTorneo.get(i)[0]);
            int pesoRojo = Integer.parseInt(gallosEnTorneo.get(i)[2]);
            int partidoRojo = Integer.parseInt(gallosEnTorneo.get(i)[5]);
            if (tope / 2 == rojos.size()) {
                break;
            } else {
                for (int j = i; j < tope; j++) {
                    int verde = Integer.parseInt(gallosEnTorneo.get(j)[0]);
                    int pesoVerde = Integer.parseInt(gallosEnTorneo.get(j)[2]);
                    int partidoVerde = Integer.parseInt(gallosEnTorneo.get(j)[5]);
                    if ((partidoRojo != partidoVerde) && (rojo != verde) && ((Math.abs(pesoRojo - pesoVerde) <= (tolerancia * 4)) && !estaEnPeleas(rojos, verdes, rojo) && !estaEnPeleas(rojos, verdes, verde) && !yaPelearon(partidoRojo, partidoVerde, rojos, verdes))) {
                        rojos.add(rojo);
                        verdes.add(verde);
                        String observación = "La diferencia es " + ((Math.abs(pesoRojo - pesoVerde)));
                        obs.add(observación);
                        System.out.println(rojo + " vs " + verde);
                    }
                }
            }
        }
        for (int i = 0; i < tope; i++) {
            int rojo = Integer.parseInt(gallosEnTorneo.get(i)[0]);
            int pesoRojo = Integer.parseInt(gallosEnTorneo.get(i)[2]);
            int partidoRojo = Integer.parseInt(gallosEnTorneo.get(i)[5]);
            if (tope / 2 == rojos.size())//Tope para cuando ya estan cergadas todas las peleas
            {
                break;
            } else {
                for (int j = i; j < tope; j++) {
                    int verde = Integer.parseInt(gallosEnTorneo.get(j)[0]);
                    int pesoVerde = Integer.parseInt(gallosEnTorneo.get(j)[2]);
                    int partidoVerde = Integer.parseInt(gallosEnTorneo.get(j)[5]);
                    if ((partidoRojo != partidoVerde) && (rojo != verde) && ((Math.abs(pesoRojo - pesoVerde) <= (tolerancia * 4.5)) && !estaEnPeleas(rojos, verdes, rojo) && !estaEnPeleas(rojos, verdes, verde) && !yaPelearon(partidoRojo, partidoVerde, rojos, verdes))) {
                        rojos.add(rojo);
                        verdes.add(verde);
                        String observación = "La diferencia es " + ((Math.abs(pesoRojo - pesoVerde)));
                        obs.add(observación);
                        System.out.println(rojo + " vs " + verde);
                    }
                }
            }
        }
        for (int i = 0; i < tope; i++) {
            int rojo = Integer.parseInt(gallosEnTorneo.get(i)[0]);
            int pesoRojo = Integer.parseInt(gallosEnTorneo.get(i)[2]);
            int partidoRojo = Integer.parseInt(gallosEnTorneo.get(i)[5]);
            if (tope / 2 == rojos.size()) {
                break;
            } else {
                for (int j = i; j < tope; j++) {
                    int verde = Integer.parseInt(gallosEnTorneo.get(j)[0]);
                    int pesoVerde = Integer.parseInt(gallosEnTorneo.get(j)[2]);
                    int partidoVerde = Integer.parseInt(gallosEnTorneo.get(j)[5]);
                    if ((partidoRojo != partidoVerde) && (rojo != verde) && ((Math.abs(pesoRojo - pesoVerde) <= (tolerancia * 5)) && !estaEnPeleas(rojos, verdes, rojo) && !estaEnPeleas(rojos, verdes, verde) && !yaPelearon(partidoRojo, partidoVerde, rojos, verdes))) {
                        rojos.add(rojo);
                        verdes.add(verde);
                        String observación = "La diferencia es " + ((Math.abs(pesoRojo - pesoVerde)));
                        obs.add(observación);
                        System.out.println(rojo + " vs " + verde);
                    }
                }
            }
        }
        if (rojos.size() != (tope / 2)) {
            System.out.println("Incompleto");
            for (int i = 0; i < tope; i++) {
                int rojo = Integer.parseInt(gallosEnTorneo.get(i)[0]);
                int pesoRojo = Integer.parseInt(gallosEnTorneo.get(i)[2]);
                int partidoRojo = Integer.parseInt(gallosEnTorneo.get(i)[5]);

                for (int j = i; j < tope; j++) {
                    int verde = Integer.parseInt(gallosEnTorneo.get(j)[0]);
                    int pesoVerde = Integer.parseInt(gallosEnTorneo.get(j)[2]);
                    int partidoVerde = Integer.parseInt(gallosEnTorneo.get(j)[5]);

                    if ((rojo != verde) && ((Math.abs(pesoRojo - pesoVerde) <= (tolerancia * 10)) && !estaEnPeleas(rojos, verdes, rojo) && !estaEnPeleas(rojos, verdes, verde))) {
                        rojos.add(rojo);
                        verdes.add(verde);
                        String observación = "";
                        if ((Math.abs(pesoRojo - pesoVerde)) > tolerancia) {
                            observación = "La diferencia es " + ((Math.abs(pesoRojo - pesoVerde)));
                        }
                        obs.add(observación);
                        System.out.println(rojo + " 4vs " + verde);
                    }
                }
            }

        }

        System.out.println("------------------");
        int num = partidosParticipantes.size();
        int numG = gallosTorneo;
        int numR = (tope / 2) / numG;
        for (int i = 0; i < tope / 2; i++) {

            int ronda = ((int) i / numR) + 1;
            f.agregarPelea(i + 1, 0, obs.get(i), rojos.get(i), verdes.get(i), ronda);
        }

        System.out.println("------- Nuevo orden ---------");
        ArrayList<String[]> peleas = f.peleasTorneoTablaAll(idTorneo);

        if (rojos.size() != (tope / 2)) {
            System.out.println("-------------- Cambiando peleas -------------");
            for (int i = 0; i < tope; i++) {
                int pRojo = Integer.parseInt(peleas.get(i)[17].toString());
                int pVerde = Integer.parseInt(peleas.get(i)[21].toString());
                int pesoRojo = Integer.parseInt(peleas.get(i)[9].toString());
                int pesoVerde = Integer.parseInt(peleas.get(i)[14].toString());
                int idVerde = Integer.parseInt(peleas.get(i)[5].toString());
                int idPelea = Integer.parseInt(peleas.get(i)[0].toString());
                if (pRojo == pVerde) {
                    for (int j = 0; j < tope; j++) {
                        int pRojoRow = Integer.parseInt(peleas.get(j)[17].toString());
                        int pVerdeRow = Integer.parseInt(peleas.get(j)[21].toString());
                        int pesoRojoRow = Integer.parseInt(peleas.get(j)[9].toString());
                        int pesoVerdeRow = Integer.parseInt(peleas.get(j)[14].toString());
                        int idRojoRow = Integer.parseInt(peleas.get(j)[5].toString());
                        int idVerdeRow = Integer.parseInt(peleas.get(j)[6].toString());
                        int idPeleaRow = Integer.parseInt(peleas.get(j)[6].toString());
                        if ((pVerde != pRojoRow && pVerde != pVerdeRow)) {
                            if ((Math.abs(pesoVerde - pesoRojoRow) <= tolerancia)) {
                                f.modificarPelea(idPeleaRow, idVerde, "verde");
                                f.modificarPelea(idPelea, idVerdeRow, "verde");
                                System.out.println("Modificar: id" + idPeleaRow + " gallo " + idVerde + " Verde");
                                System.out.println("Modificar: id" + idPelea + " gallo " + idVerdeRow + " Verde");
                                break;
                            } else if ((Math.abs(pesoVerde - pesoVerdeRow) <= tolerancia)) {
                                f.modificarPelea(idPeleaRow, idVerde, "rojo");
                                f.modificarPelea(idPelea, idRojoRow, "verde");
                                System.out.println("Modificar: id" + idPeleaRow + " gallo " + idVerde + " Rojo");
                                System.out.println("Modificar: id" + idPelea + " gallo " + idRojoRow + " Verde");
                                break;
                            }
                        }
                    }
                }
            }
        }

        //Checar si hay partidos que ya han peleado y reacomodar para que no repitan partidos
        System.out.println("------- Orden si sigue peleando partidos iguales ---------");
        peleas = f.peleasTorneoTablaAll(idTorneo);
        int peleRep = sinPelearRepetido(peleas);
        int fin=0;
        tope = peleas.size();
        while (peleRep >= 0 && fin < tope) {
            fin++;
            System.out.println("Tope: "+tope+" Fin: "+fin);
            System.out.println("Hay partidos que repiten pela!!! Reordenando");
            int partidoRepR = Integer.parseInt(peleas.get(peleRep)[10]);
            int partidoRepV = Integer.parseInt(peleas.get(peleRep)[15]);
            rojos = new ArrayList<Integer>();
            verdes = new ArrayList<Integer>();
            
            for (int i = 0; i < tope; i++) {
                rojos.add(Integer.parseInt(peleas.get(i)[4]));
                verdes.add(Integer.parseInt(peleas.get(i)[5]));
            }
            for (int i = 0; i < tope; i++) {
                int partidoR = Integer.parseInt(peleas.get(i)[10]);
                int partidoV = Integer.parseInt(peleas.get(i)[15]);
                int rojo = Integer.parseInt(peleas.get(i)[4]);
                int verde = Integer.parseInt(peleas.get(i)[5]);
                int pesoRojo = Integer.parseInt(peleas.get(i)[9]);
                int pesoVerde = Integer.parseInt(peleas.get(i)[14]);

                if ((partidoRepR == partidoR && partidoRepV == partidoV)
                        || (partidoRepR == partidoV && partidoRepV == partidoR)) {
                    //Cambiamos el repetido buscamos el mejor y que no se repita
                    int id2 = Integer.parseInt(peleas.get(peleRep)[0]);
                    int verde2 = Integer.parseInt(peleas.get(peleRep)[5]);
                    System.out.println("Iguales ID2: "+id2);
                    for (int j = 0; j < tope; j++) {
                        int partidoRRow = Integer.parseInt(peleas.get(j)[10]);
                        int partidoVRow = Integer.parseInt(peleas.get(j)[15]);
                        int rojoRow = Integer.parseInt(peleas.get(j)[4]);
                        int verdeRow = Integer.parseInt(peleas.get(j)[5]);
                        int pesoRojoRow = Integer.parseInt(peleas.get(j)[9]);
                        int pesoVerdeRow = Integer.parseInt(peleas.get(j)[14]);
                         int id1 = Integer.parseInt(peleas.get(j)[0]);
                        if ((rojo != verdeRow) && (Math.abs(pesoRojo - pesoVerdeRow) <= tolerancia*2) && id1!=id2 && !yaPelearon(partidoR, partidoVRow, rojos, verdes)) {                           
                             verdes.set(i, verdeRow);
                             verdes.set(j, verde2);
                             f.cambiarPeleaPartidos(id1,id2,verdeRow,verde2);
                             break;
                        }
                    }
                }
            }

            //Actualizar la lista de peleas
            peleas = f.peleasTorneoTablaAll(idTorneo);
            peleRep = sinPelearRepetido(peleas);
        }

        //Fin de la validacion 
        int numP = (peleas.size() * numG) / 2;
        System.out.println("Num peleas: " + numP);
        int[] arrayPartidosOld = new int[numP];
        int[] arrayNewPeleas = new int[peleas.size()];
        arrayPartidosOld[0] = Integer.parseInt(peleas.get(0)[17]);
        arrayPartidosOld[1] = Integer.parseInt(peleas.get(0)[21]);

        int aux = 0;
        arrayNewPeleas[0] = Integer.parseInt(peleas.get(0)[1]);
        for (int i = 1; i < ((peleas.size() + 1) / 2); i++) {
            int idRojo = Integer.parseInt(peleas.get(i)[17]);
            int idVerde = Integer.parseInt(peleas.get(i)[21]);
            if (estaArrra(arrayPartidosOld, idRojo)) {
                aux = Integer.parseInt(peleas.get(i + (peleas.size() / 2))[1]);
                arrayNewPeleas[i + (peleas.size() / 2)] = Integer.parseInt(peleas.get(i)[1]);
                arrayNewPeleas[i] = aux;

            } else if (estaArrra(arrayPartidosOld, idVerde)) {
                aux = Integer.parseInt(peleas.get(i + (peleas.size() / 2))[1]);
                arrayNewPeleas[i + (peleas.size() / 2)] = Integer.parseInt(peleas.get(i)[1]);
                arrayNewPeleas[i] = aux;
            } else {
                arrayNewPeleas[i] = Integer.parseInt(peleas.get(i)[1]);
            }
        }

        for (int i = 0; i < arrayNewPeleas.length; i++) {
            int id = Integer.parseInt(peleas.get(i)[1]);
            System.out.println("ID: " + id);
            if (!estaArrra(arrayNewPeleas, id)) {
                arrayNewPeleas[i] = id;
            }
        }
        System.out.println("---Ordenados---");
        peleas = f.peleasTorneoTablaAll(idTorneo);
           //REordenar 
          System.out.println("---------Reordenar partidos no repitan peleas en una ronda-----------");
        for (int i = 0; i < arrayNewPeleas.length; i++) {
            System.out.println("ID. "+arrayNewPeleas[i]);
             System.out.println(rojos.get(i) + " vs " + verdes.get(i) + " Obs: " + obs.get(i));
           
            int ronda = ((int) i / numR) + 1;
            f.reordenarPelea(Integer.parseInt(peleas.get(i)[0]), arrayNewPeleas[i],ronda);

        }
        
        System.out.println("---------Reordenar rondas-----------");
        ArrayList<String[]> peleasxT = f.peleasTorneoTabla(idTorneo);
         for (int i = 0; i < arrayNewPeleas.length; i++) {
            
            int ronda = ((int) i / numR) + 1;
            f.reordenarRonda(Integer.parseInt(peleasxT.get(i)[6]), ronda);

        }

        /**
         * Cargamos lainformacion en la tabla
         */
        f.actualizarTabla(tblPeleas, f.peleasTorneoTabla(idTorneo));
        btnPeleas.setEnabled(true);
        btnPeleasComplete.setEnabled(true);
        btnCotejo.setEnabled(true);
        lblLoad.setIcon(null); // 
        System.out.println("FINNNNNNNNNNNNNNNNNNN");
    }//GEN-LAST:event_buttonPopup1ActionPerformed
    public static boolean estaArrra(int[] array, int index) {
        boolean esta = false;
        for (int i : array) {
            if (i == index) {
                esta = true;
                break;
            }
        }
        return esta;
    }
    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton18ActionPerformed
    @SuppressWarnings("deprecation")
    private void btnPeleasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPeleasActionPerformed

        JasperReport jasperReport;
        JasperPrint jasperPrint;
        Conexion conexion = new Conexion();
        try {
            File path = new File("peleas.pdf");
            path.delete();
            jasperReport = JasperCompileManager.compileReport("Peleas.jrxml");
            Map parametros = new HashMap();
            parametros.put("idTorneo", "" + idTorneo);
            System.out.println("ID: " + idTorneo);
            jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conexion.conn);
            JRExporter ex = new JRPdfExporter();
            ex.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
            ex.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File("peleas.pdf"));
            ex.exportReport();
            path = new File("peleas.pdf");
            Desktop.getDesktop().open(path);
        } catch (Exception ex) {
            ex.printStackTrace();

        }

    }//GEN-LAST:event_btnPeleasActionPerformed
    @SuppressWarnings("deprecation")
    private void btnCotejoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCotejoActionPerformed
        JasperReport jasperReport;
        JasperPrint jasperPrint;
        Conexion conexion = new Conexion();
        try {

            jasperReport = JasperCompileManager.compileReport("cotejo.jrxml");
            Map parametros = new HashMap();
            parametros.put("idTorneo", "" + idTorneo);
            jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conexion.conn);
            JRExporter ex = new JRPdfExporter();
            ex.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
            ex.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File("cotejo.pdf"));
            ex.exportReport();
            File path = new File("cotejo.pdf");
            Desktop.getDesktop().open(path);
        } catch (Exception ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(null, ex.getMessage());
        }


    }//GEN-LAST:event_btnCotejoActionPerformed
    /**
     * Prueba para ver si un gallo de un partido ya peleo con otro gallo del
     * mismo partido
     *
     * @param
     */

    public boolean yaPelearon(int partidoR, int partidoV, ArrayList<Integer> rojos, ArrayList<Integer> verdes) {
        boolean res = false;
        for (int i = 0; i < rojos.size(); i++) {
            String[] galloR = f.detailsGallo(rojos.get(i));
            String[] galloV = f.detailsGallo(verdes.get(i));

            if ((partidoR == Integer.parseInt(galloR[3])
                    && partidoV == Integer.parseInt(galloV[3]))
                    || (partidoR == Integer.parseInt(galloR[3])
                    && partidoV == Integer.parseInt(galloV[3]))) {
                res = true;
                System.out.println("Ya pelearon pRojo: " + partidoR + " pVerfde: " + partidoV);
                break;
            }
        }
        return res;
    }

    /**
     * Prueba para ver si un gallo de un partido ya peleo con otro gallo del
     * mismo partido
     *
     * @param
     */
    public int sinPelearRepetido(ArrayList<String[]> peleasDet) {
        int res = -1;
        int[] rojos = new int[peleasDet.size()];
        int[] verdes = new int[peleasDet.size()];
        int tope = peleasDet.size();
        for (int i = 0; i < tope; i++) {
            rojos[i] = Integer.parseInt(peleasDet.get(i)[10]);
            verdes[i] = Integer.parseInt(peleasDet.get(i)[15]);
        }
        for (int i = 0; i < tope; i++) {
            int partidoR = rojos[i];
            int partidoV = verdes[i];
            for (int j = 0; j < i; j++) {
                if ((partidoR == Integer.parseInt(peleasDet.get(j)[10])
                        && partidoV == Integer.parseInt(peleasDet.get(j)[15]))
                        || (partidoR == Integer.parseInt(peleasDet.get(j)[10])
                        && partidoV == Integer.parseInt(peleasDet.get(j)[15]))) {
                    System.out.println("Pelea #:" + peleasDet.get(j)[0] + " P Rojo: " + partidoR + " P Verde: " + partidoV);
                    res = Integer.parseInt(peleasDet.get(j)[0]);
                    break;
                }
            }

        }
        return res;
    }

    @SuppressWarnings("deprecation")
    private void btnPeleasCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPeleasCompleteActionPerformed
        JasperReport jasperReport;
        JasperPrint jasperPrint;
        Conexion conexion = new Conexion();
        try {

            jasperReport = JasperCompileManager.compileReport("DetallePeleas.jrxml");
            Map parametros = new HashMap();
            parametros.put("idTorneo", "" + idTorneo);
            jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conexion.conn);
            JRExporter ex = new JRPdfExporter();
            ex.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
            ex.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File("DetallePeleas.pdf"));
            ex.exportReport();
            File path = new File("DetallePeleas.pdf");
            Desktop.getDesktop().open(path);
        } catch (Exception ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(null, ex.getMessage());
        }


    }//GEN-LAST:event_btnPeleasCompleteActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    public boolean estaEnPeleas(ArrayList<Integer> l, ArrayList<Integer> v, int gallo) {
        boolean esta = false;
        for (Integer integer : l) {
            if (gallo == integer) {
                esta = true;
                break;
            }
        }
        if (!esta) {
            for (Integer integer : v) {
                if (gallo == integer) {
                    esta = true;
                    break;
                }
            }
        }
        return esta;
    }

    public int estaEnRestriccion(int partido) {
        int esta = -1;
        for (int i = 0; i < lstRest.size(); i++) {
            String rad[] = lstRest.get(i).split(".");
            for (int j = 0; j < rad.length; j++) {
                if (j % 2 != 0) {
                    if ((partido + "").equals(rad[j].replace(" ", ""))) {
                        esta = j;
                        break;
                    }
                }
            }
        }
        return esta;

    }

    private void cargarArbol() {
        f.actualizarTabla(tblPartidosRestricciones, partidosParticipantes);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private org.edisoncor.gui.button.ButtonPopup btnCotejo;
    private org.edisoncor.gui.button.ButtonPopup btnPeleas;
    private org.edisoncor.gui.button.ButtonPopup btnPeleasComplete;
    private javax.swing.ButtonGroup buttonGroup1;
    private org.edisoncor.gui.button.ButtonPopup buttonPopup1;
    private org.edisoncor.gui.button.ButtonPopup buttonPopup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblLoad;
    private javax.swing.JList<String> lstRestricciones;
    private javax.swing.JTable tblGallos;
    private javax.swing.JTable tblPartidos;
    private javax.swing.JTable tblPartidosRestricciones;
    private javax.swing.JTable tblPeleas;
    private javax.swing.JTextField txtCompañia;
    private javax.swing.JSpinner txtDerrota;
    private javax.swing.JSpinner txtEmpate;
    private com.toedter.calendar.JDateChooser txtFecha;
    private javax.swing.JSpinner txtGallos;
    private javax.swing.JTextField txtID;
    private javax.swing.JSpinner txtMaximo;
    private javax.swing.JSpinner txtMinimo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtOrganización;
    private javax.swing.JSpinner txtTolerancia;
    private javax.swing.JTextField txtUbicacion;
    private javax.swing.JSpinner txtVictoria;
    // End of variables declaration//GEN-END:variables

}
